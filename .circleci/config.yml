version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha

    environment:
      JVM_OPTS: -Xmx3200m # メモリ不足エラーを回避するために最大ヒープサイズを制限
    steps:
      - checkout # ソースコードを作業ディレクトリにチェックアウト
      - restore_cache: # 最後の実行からチェックサムが変化していない場合は、保存されているキャッシュを復元
          key: jars-{{ checksum "androidApp/build.gradle" }}-{{ checksum  "androidApp/app/build.gradle" }}

      - run:
          name: パーミッション変更
          command: sudo chmod +x gradlew
          working_directory: androidApp

      - run:
          name: 依存関係をダウンロード
          command: ./gradlew androidDependencies
          working_directory: androidApp

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "androidApp/build.gradle" }}-{{ checksum  "androidApp/app/build.gradle" }}

      - run:
          name: ライセンスの同意
          command: yes | sdkmanager --licenses || exit 0

      - run:
          name: デバッグAPKとリリースAPKをビルド
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
          working_directory: androidApp

      - run:
          name: 環境変数確認
          command: echo $CLIENT_SECRET
          working_directory: androidApp

      - run:
          name: Google サービスアカウントを保存
          command: echo $CLIENT_SECRET > ${HOME}/gcloud-service-key.json
          working_directory: androidApp

      - run:
          name: gcloud を承認してコンフィグのデフォルトを設定
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          working_directory: androidApp

      - run:
          name: Firebase Test Lab を使用してテスト
          command: sudo gcloud firebase test android run --type instrumentation --app ./app/build/outputs/apk/debug/app-debug.apk --test ./app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          working_directory: androidApp
      - run:
          name: Test結果保存用のディレクトリ作成
          command: mkdir firebase_results
          working_directory: androidApp
      - run:
          name: gsutil 依存関係をインストールしてテスト結果データをダウンロード
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://test-lab-ubxn5ztjx55k4-i4y49mj65hnzm | tail -1` firebase_results/ | true
          working_directory: androidApp

      - store_artifacts:
          path: androidApp/firebase_results

#      - run:
#          name: ユニットテスト
#          command: ./gradlew lint test
#          working_directory: androidApp
#
#      - store_test_results:
#          path: app/build/test-results
#          working_directory: androidApp
#
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#          working_directory: androidApp
